{"version":3,"sources":["logo.svg","search/search.js","search-location/search-location.js","header/header.js","footer/footer.js","instagramFeed/instagramfeed.js","Root/Root.js","InstaPost/InstaPost.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","Component","Header","Box","component","m","Container","className","maxWidth","xs","to","Footer","axios","require","InstagramFeed","props","state","userName","event","this","setState","target","value","console","log","browserHistory","push","get","then","response","catch","error","finally","Fragment","CssBaseline","Typography","style","backgroundColor","height","marginTop","background","border","borderRadius","boxShadow","noValidate","autoComplete","marginLeft","TextField","id","label","variant","onChange","updateUserName","bind","Button","onClick","fetchFeed","type","color","Root","md","children","InstaPost","mediaId","imageId","imageUrl","fetchPost","fetchImage","data","username","media","map","item","i","media_url","url","src","App","history","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d1f00d29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React from 'react';\r\nimport TextFieldCss from '../search/search.css'\r\nimport { Container } from \"@material-ui/core\";\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n// render\r\n\r\nclass Search extends React.Component{\r\n   render(){\r\n       return(\r\n        <form  noValidate autoComplete=\"off\" >\r\n\r\n        <Grid container>\r\n                        <Grid container item xs={4} spacing={3}>\r\n                        <SearchOutlined  className=\"search-icon\"/>\r\n                        </Grid>\r\n                        <Grid container item xs={4}  spacing={3}>\r\n                       <input type=\"text\" className=\"TextFieldCss\"></input>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    \r\n      </form>\r\n       )\r\n   } \r\n}\r\n\r\nexport default Search;","import InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React from 'react';\r\nimport { Container } from \"@material-ui/core\";\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextFieldCssLocation from '../search-location/search-location.css'\r\n\r\nclass SearchLocation extends React.Component{\r\n   render(){\r\n       return(\r\n        <form  noValidate autoComplete=\"off\" >\r\n\r\n        <Grid container>\r\n                        <Grid container item xs={4} spacing={3}>\r\n                        <SearchOutlined  className=\"search-icon-location\"/>\r\n                        </Grid>\r\n                        <Grid container item xs={4}  spacing={3}>\r\n                       <input type=\"text\" className=\"TextFieldCssLocation\"></input>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    \r\n      </form>\r\n       )\r\n   } \r\n}\r\n\r\nexport default SearchLocation;","import Box from '@material-ui/core/Box';\r\nimport React from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport HeaderCss from '../header/header.css'\r\nimport Search from '../search/search.js';\r\nimport SearchLocation from '../search-location/search-location';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Link} from 'react-router';\r\n\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <Box component=\"span\" m={1}>\r\n                <Container className=\"HeaderCss\" maxWidth=\"ex lg sm\">\r\n                    <div className=\"row\">\r\n                        <div xs={3}>\r\n                            <h1>Bookish</h1>\r\n                            <pre>Be Confident-Be yourself</pre>\r\n\r\n                        </div>\r\n                        <div className=\"Header-Links\" xs={9}>\r\n                        <Link to={\"/login\"} >Login In</Link>&nbsp;&nbsp;\r\n                        <Link to={\"/hello-reacts\"}>Sign Up</Link>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Container>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import Box from '@material-ui/core/Box';\r\nimport React from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport FooterCss from '../footer/footer.css'\r\n\r\n\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n       return (\r\n        <Box component=\"span\" m={1}>\r\n        <Container className=\"FooterCss\" maxWidth=\"ex lg sm\">\r\n        <h3>Contact us</h3>\r\n\r\n        </Container>\r\n      </Box>\r\n       );\r\n    }\r\n }\r\n\r\n export default Footer;","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport instaform from '../instagramFeed/instagramfeed.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport {browserHistory} from 'react-router';\r\n\r\n\r\nconst axios = require('axios');\r\n\r\n\r\n\r\nclass InstagramFeed extends React.Component {\r\n\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            userName: \"\"\r\n        };\r\n    }\r\n    updateUserName(event) {\r\n        // console.log('user name'+ event.target.value);\r\n        this.setState({\r\n            userName: event.target.value\r\n        })\r\n    }\r\n\r\n    fetchFeed() {\r\n        console.log('userName ' + this.state.userName)\r\n        browserHistory.push(\"/post\");\r\n\r\n        // Make a request for a user with a given ID\r\n        axios.get('https://jsonplaceholder.typicode.com/todos/1')\r\n            .then(function (response) {\r\n                // handle success\r\n                console.log(response);\r\n\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .finally(function () {\r\n                // always executed\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <Container maxWidth=\"lg\">\r\n                    <Typography component=\"div\" style={{\r\n                        backgroundColor: 'white', height: '50vh', marginTop: '66%',\r\n                        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n                        border: 0,\r\n                        borderRadius: 3,\r\n                        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)'\r\n                    }} />\r\n                    <Box component=\"span\" m={1}>\r\n\r\n                        <form className=\"instaform\"  noValidate=\"false\" autoComplete=\"off\"  >\r\n                            <h2 style={{ marginTop: \"58%\", marginLeft: \"2%\" }}>Instagram</h2>\r\n                            <TextField id=\"outlined-basic\" label=\"Instagram ID\" variant=\"outlined\" onChange={this.updateUserName.bind(this)} /><br /><br />\r\n                            <br/><br/>\r\n                            <Button onClick={this.fetchFeed.bind(this)} type=\"Submit\" variant=\"contained\" color=\"primary\">\r\n                                Submit\r\n      </Button>\r\n                        </form>\r\n                    </Box>\r\n\r\n                </Container>\r\n                \r\n                    \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InstagramFeed;\r\n\r\n","import Box from '@material-ui/core/Box';\r\nimport React from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport HeaderCss from '../header/header.css'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Header from '../header/header'\r\nimport Footer from '../footer/footer'\r\nimport {Row, Col } from 'react-grid-system';\r\n\r\n\r\n\r\nclass Root extends React.Component {\r\n    render() {\r\n        return (\r\n\r\n            <Container >\r\n                <Row>\r\n                    <Col xs={12} md={4}>\r\n                        <Header />\r\n                    </Col>\r\n                    <Col xs={12} md={4}>\r\n                        {this.props.children}\r\n                    </Col>\r\n                    <Col xs={12} md={4}>\r\n                        <Footer />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Root;","import Box from '@material-ui/core/Box';\r\nimport React, { useCallback } from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport Image from 'react-bootstrap/Image'\r\nimport {Row, Col } from 'react-grid-system';\r\nimport InstaPostCss from '../InstaPost/InstaPost.css'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios'\r\n\r\nclass InstaPost extends React.Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            userName:'',\r\n            mediaId:'',\r\n            imageId:[],\r\n            imageUrl:[]\r\n        };\r\n        // this.fetchPost = this.fetchPost.bind(this);   \r\n    \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPost();\r\n        this.fetchImage();\r\n      }\r\n\r\n      fetchPost(){\r\n                // Make a request for a user with a given ID\r\n                axios.get('https://graph.instagram.com/17841438945925077?fields=id,username,account_type,media&access_token=IGQVJYcVZAaTkoyWHZA2Sm9ZARFJVdTg0LWpWNHNXajFnMi1mTzdzdU41NWpwZADUxMXF3ZA0QxNnBQM1QxLWg2RVFJelg0Q3paYjgwVE9ya2NQOUtIYWhZAY0NfbnJ6X0F2U0kxX09MUHhR')\r\n                .then(response=> {\r\n                    // console.log(response.data.username)\r\n                  const userName = response.data.username;\r\n                //   console.log(response.data.media.data[0].id)\r\n                 // const media=response.data.media\r\n                  this.setState({userName});\r\n                  this.setState({\r\n                      mediaId:response.data.media.data[0].id\r\n                  })\r\n                })\r\n                .catch(function (error) {\r\n                    // handle error\r\n                    console.log(error);\r\n                })\r\n                .finally(function () {\r\n                    // always executed\r\n                });\r\n      }\r\n\r\n      fetchImage(){\r\n        axios.get('https://graph.instagram.com/17863725979977364?fields=id,media_type,media_url,username,timestamp,children&access_token=IGQVJYcVZAaTkoyWHZA2Sm9ZARFJVdTg0LWpWNHNXajFnMi1mTzdzdU41NWpwZADUxMXF3ZA0QxNnBQM1QxLWg2RVFJelg0Q3paYjgwVE9ya2NQOUtIYWhZAY0NfbnJ6X0F2U0kxX09MUHhR')\r\n        .then(response=> {\r\n            // console.log(response.data.children.data)\r\n          const imageId = response.data.children.data;\r\n        //   console.log(response.data.children.data[0].id)\r\n         // const media=response.data.media\r\n          this.setState({imageId});\r\n\r\n          this.state.imageId.map((item, i) =>{\r\n              console.log(\"fetching image url for image\"+i+\"with imageId \"+item.id);\r\n\r\n            axios.get('https://graph.instagram.com/'+item.id+'?fields=id,media_type,media_url,username,timestamp&access_token=IGQVJYcVZAaTkoyWHZA2Sm9ZARFJVdTg0LWpWNHNXajFnMi1mTzdzdU41NWpwZADUxMXF3ZA0QxNnBQM1QxLWg2RVFJelg0Q3paYjgwVE9ya2NQOUtIYWhZAY0NfbnJ6X0F2U0kxX09MUHhR')\r\n            .then(response=> {\r\n            console.log(\"media url for item \"+i+\" \"+response.data.media_url)\r\n              const imageUrl = response.data.media_url;\r\n             \r\n              //this.setState({imageUrl:imageUrl});\r\n\r\n              this.setState({\r\n                imageUrl: [...this.state.imageUrl, imageUrl]\r\n              })\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n\r\n          })\r\n\r\n\r\n    \r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n        })\r\n        .finally(function () {\r\n            // always executed\r\n        });\r\n\r\n      }\r\n    \r\n\r\n    \r\n    render() {\r\n        const userName = this.state.userName;\r\n        const mediaId=this.state.mediaId;\r\n        const imageUrl=this.state.imageUrl;\r\n        console.log(\"imageUrl \"+imageUrl)\r\n        // const images = imageUrl.map(url => {\r\n        //     return <img key={url} src={url} className=\"img-responsive\" />\r\n        //  });\r\n  \r\n\r\n        return (\r\n                 <div className=\"InstaPostCss\">\r\n                 <h2>Instagram Profile</h2>\r\n                 <label>User Name : {userName}</label><br/>\r\n                 <label>Media Id : {mediaId}</label>\r\n\r\n                {/* <div> {images}</div> */}\r\n\r\n                \r\n        { this.state.imageUrl.map(url => <img src={url} />)}\r\n      \r\n                \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default InstaPost;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header  from './header/header';\nimport Footer from './footer/footer';\nimport InstagramFeed from './instagramFeed/instagramfeed';\nimport { Router, Route, Link, browserHistory, IndexRoute} from 'react-router'\nimport Root from './Root/Root'\nimport InstaPost from './InstaPost/InstaPost'\nimport BrowserRouter from 'react-router-dom/BrowserRouter'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     {/* <Header/>\n     <InstagramFeed/>\n     <Footer/> */}\n     <Router history={browserHistory}>\n       <Route path={\"/hello-reacts\"} component={Root}>\n         <IndexRoute component={Root} />\n       <Route path={'/login'} component={InstagramFeed}/>\n       <Route path={'/post'} component={InstaPost} />\n       </Route>\n       </Router>\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport BrowserRouter from 'react-router-dom/BrowserRouter'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n <BrowserRouter basename={process.env.PUBLIC_URL}>\n<App />\n</BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}